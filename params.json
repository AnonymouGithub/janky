{"name":"Janky","body":"Janky\r\n=====\r\n\r\nThis is Janky, a continuous integration server built on top of\r\n[Jenkins][], controlled by [Hubot][], and designed for [GitHub][].\r\n\r\n* **Built on top of Jenkins.** The power, vast amount of plugins and large\r\n  community of the popular CI server all wrapped up in a great experience.\r\n\r\n* **Controlled by Hubot.** Day to day operations are exposed as simple\r\n  Hubot commands that the whole team can use.\r\n\r\n* **Designed for GitHub.** Janky creates the appropriate [web hooks][w] for\r\n  you and the web app restricts access to members of your GitHub organization.\r\n\r\n[GitHub]: https://github.com\r\n[Hubot]: http://hubot.github.com\r\n[Jenkins]: http://jenkins-ci.org\r\n[w]: http://developer.github.com/v3/repos/hooks/\r\n\r\nHubot Usage\r\n-----------\r\n\r\nStart by setting up a new Jenkins job and GitHub web hook for a\r\nrepository:\r\n\r\n    hubot ci setup github/janky\r\n\r\nThe `setup` command can safely be run over and over again. It won't do\r\nanything unless it needs to. It takes an optional name argument:\r\n\r\n    hubot ci setup github/janky janky-ruby1.9.2\r\n\r\nAll branches are built automatically on push. Disable auto build with:\r\n\r\n    hubot ci toggle janky\r\n\r\nRun the command again to re-enable it. Force a build of the master\r\nbranch:\r\n\r\n    hubot ci build janky\r\n\r\nOf a specific branch:\r\n\r\n    hubot ci build janky/libgit2\r\n\r\nDifferent builds aren't relevant to the same Campfire room and so Janky\r\nlets you choose where notifications are sent to. First get a list of\r\navailable rooms:\r\n\r\n    hubot ci rooms\r\n\r\nThen pick one:\r\n\r\n    hubot ci set room janky The Serious Room\r\n\r\nGet the status of a build:\r\n\r\n    hubot ci status janky\r\n\r\nSpecific branch:\r\n\r\n    hubot ci status janky/libgit2\r\n\r\nAll builds:\r\n\r\n    hubot ci status\r\n\r\nFinally, get a quick reference of the available commands with:\r\n\r\n    hubot ci?\r\n\r\nInstalling\r\n----------\r\n\r\n### Jenkins\r\n\r\nJanky requires access to a Jenkins server. Version **1.427** is\r\nrecommended. Refer to the Jenkins [documentation][doc] for installation\r\ninstructions and install the [Notification Plugin][np] version 1.4.\r\n\r\n[doc]: https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins\r\n[np]: https://wiki.jenkins-ci.org/display/JENKINS/Notification+Plugin\r\n\r\n### Deploying\r\n\r\nJanky is designed to be deployed to [Heroku](https://heroku.com).\r\n\r\nGrab all the necessary files from [the gist][gist]:\r\n\r\n    $ git clone git://gist.github.com/1497335 janky\r\n\r\nThen push up it to a new Heroku app:\r\n\r\n    $ cd janky\r\n    $ heroku create --stack cedar\r\n    $ bundle install\r\n    $ git add Gemfile.lock\r\n    $ git commit Gemfile.lock -m \"lock bundle\"\r\n    $ git push heroku master\r\n\r\nAfter configuring the app (see below), create the database:\r\n\r\n    $ heroku run rake db:migrate\r\n\r\n[gist]: https://gist.github.com/1497335\r\n\r\n### Configuring\r\n\r\nJanky is configured using environment variables. Use the `heroku config`\r\ncommand:\r\n\r\n    $ heroku config:add VARIABLE=value\r\n\r\nRequired settings:\r\n\r\n* `JANKY_BASE_URL`: The application URL **with** a trailing slash. Example:\r\n  `http://mf-doom-42.herokuapp.com/`.\r\n* `JANKY_BUILDER_DEFAULT`: The Jenkins server URL **with** a trailing slash.\r\n   Example: `http://jenkins.example.com/`. For basic auth, include the\r\n   credentials in the URL: `http://user:pass@jenkins.example.com/`.\r\n* `JANKY_CONFIG_DIR`: Directory where build config templates are stored.\r\n  Typically set to `/app/config` on Heroku.\r\n* `JANKY_HUBOT_USER`: Login used to protect the Hubot API.\r\n* `JANKY_HUBOT_PASSWORD`: Password for the Hubot API.\r\n* `JANKY_GITHUB_USER`: The login of the GitHub user used to access the\r\n  API. Requires Push and Pull privileges.\r\n* `JANKY_GITHUB_PASSWORD`: The password for the GitHub user.\r\n* `JANKY_GITHUB_HOOK_SECRET`: Secret used to sign hook requests from\r\n  GitHub.\r\n* `JANKY_CHAT_DEFAULT_ROOM`: Chat room where notifications are sent by default.\r\n\r\n#### GitHub Enterprise\r\n\r\nUsing Janky with [GitHub Enterprise][ghe] requires one extra setting:\r\n\r\n* `JANKY_GITHUB_API_URL`: Full API URL of the instance, *with* a trailing\r\n  slash. Example: `https://github.example.com/api/v3/`.\r\n\r\n[ghe]: https://enterprise.github.com\r\n\r\n### Chat Notification\r\n\r\n#### Campfire\r\nJanky notifies [Campfire][] chat rooms by default. Required settings:\r\n\r\n* `JANKY_CHAT_CAMPFIRE_ACCOUNT`: account name.\r\n* `JANKY_CHAT_CAMPFIRE_TOKEN`: authentication token for the user sending\r\n  build notifications.\r\n\r\n[Campfire]: http://campfirenow.com/\r\n\r\n#### HipChat\r\n\r\nRequired settings:\r\n\r\n* `JANKY_CHAT=hipchat`\r\n* `JANKY_CHAT_HIPCHAT_TOKEN`: authentication token\r\n* `JANKY_CHAT_HIPCHAT_FROM`: name that messages will appear be sent from.\r\n  Defaults to `CI`.\r\n\r\nInstallation:\r\n\r\n* Add `require \"janky/chat_service/hipchat\"` to the `config/environment.rb` file\r\n  **before** the `Janky.setup(ENV)` line.\r\n* `echo 'gem \"hipchat\", \"~>0.4\"' >> Gemfile`\r\n* `bundle`\r\n* `git commit -am \"install hipchat\"`\r\n\r\n### Authentication\r\n\r\nTo restrict access to members of a GitHub organization, [register a new\r\nOAuth application on GitHub](https://github.com/account/applications)\r\nwith the callback set to `$JANKY_BASE_URL/auth/github/callback` then set\r\na few extra settings:\r\n\r\n* `JANKY_SESSION_SECRET`: Random session cookie secret. Typically\r\n  generated by a tool like `pgwen`.\r\n* `JANKY_AUTH_CLIENT_ID`: The client ID of the OAuth application.\r\n* `JANKY_AUTH_CLIENT_SECRET`: The client secret of the OAuth application.\r\n* `JANKY_AUTH_ORGANIZATION`: The organization name. Example: \"github\".\r\n\r\n### Hubot\r\n\r\nInstall the [janky script](http://git.io/hubot-janky) in your Hubot\r\nthen set the `HUBOT_JANKY_URL` environment variable. Example:\r\n`http://user:secret@janky.example.com/_hubot/`, with user and password\r\nreplaced by `JANKY_HUBOT_USER` and `JANKY_HUBOT_PASSWORD` respectively.\r\n\r\n### Custom Build Configuration\r\n\r\nThe default build command should suffice for most Ruby applications:\r\n\r\n    $ bundle install --path vendor/gems --binstubs\r\n    $ bundle exec rake\r\n\r\nFor more control you can add a `script/cibuild` at the root of your\r\nrepository for Jenkins to execute instead.\r\n\r\nFor total control, whole Jenkins' `config.xml` files can be associated\r\nwith Janky builds. Given a build called `windows`, Janky will try\r\n`config/jobs/windows.xml.erb` before falling back to the default\r\nconfiguration, `config/jobs/default.xml.erb`. After updating or adding\r\na custom config, run `hubot ci setup` again to update the Jenkins\r\nserver.\r\n\r\nHacking\r\n-------\r\n\r\nGet your environment up and running:\r\n\r\n    $ script/bootstrap\r\n\r\nCreate the databases:\r\n\r\n    $ mysqladmin -uroot create janky_development\r\n    $ mysqladmin -uroot create janky_test\r\n\r\nCreate the tables:\r\n\r\n    $ RACK_ENV=development bin/rake db:migrate\r\n    $ RACK_ENV=test bin/rake db:migrate\r\n\r\nSeed some data into the development database:\r\n\r\n    $ bin/rake db:seed\r\n\r\nStart the server:\r\n\r\n    $ script/server\r\n\r\nOpen the app:\r\n\r\n    $ open http://localhost:9393/\r\n\r\nRun the test suite:\r\n\r\n    $ bin/rake\r\n\r\nContributing\r\n------------\r\n\r\nFork the [Janky repository on GitHub](https://github.com/github/janky) and\r\nsend a Pull Request.\r\n\r\nCopying\r\n-------\r\n\r\nCopyright Â© 2011-2012, GitHub, Inc. See the `COPYING` file for license\r\nrights and limitations (MIT).","tagline":"Continuous integration server built on top of Jenkins and Hubot","google":""}